/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.42
 * Generated at: 2017-04-16 21:15:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class clientdetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n");
      out.write("<title>Event Metadata</title>\n");
      out.write("\n");
      out.write("<link href=\"css/client.css\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("</head>\n");
      out.write(" <body>\n");
      out.write(" <div id=\"container\">\n");
      out.write("<div id=\"a\"><a href=\"AccountController?action=Logout\" >Logout</a></div>\n");
      out.write(" <table id=\"table\" class=\"tbl\">\n");
      out.write("    <tr>\n");
      out.write("        \n");
      out.write("     \n");
      out.write("          <th><a href=\"ServletController?action=listevent\">List Events</a></th>\n");
      out.write("       \n");
      out.write("        <th><a href=\"ServletController?action=insert\">Add Event</a></th>\n");
      out.write("\t\t<center><table id=\"table\" class=\"tb2\">\n");
      out.write("       </tr>\n");
      out.write("\n");
      out.write("\n");
      out.write("<center><table id=\"table1\" class=\"tb2\">\n");
      out.write("    <tr>\n");
      out.write("        <th>Event Details</th>\n");
      out.write("        <th>CFP Setup</th>\n");
      out.write("        <th>Review Setup</th>\n");
      out.write("        <th>Session Setup</th>\n");
      out.write("        <th>New Event</th>\n");
      out.write("        <th>Abstract List</th>\n");
      out.write("       </tr> \n");
      out.write("      </table>\n");
      out.write("      <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;....................................................@..................................................................................</p>\n");
      out.write("<h2>Event Metadata &nbsp client/vendor &nbsp sponsored participants </h2>\n");
      out.write("<form action=\"clientdetails.jsp\">\n");
      out.write("\t\t<table>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td colspan=\"2\" align=\"center\"><b>client details</b></td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td colspan=\"2\" align=\"center\"><b>&nbsp;</td>\n");
      out.write("\t\t</tr>\n");
      out.write("<tr>\n");
      out.write("\t\t\t<td>firstname:</td>\n");
      out.write("\t\t\t<td><input id=\"firstname\" type=\"text\" name=\"firstname\" required autofocus/></td>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\n");
      out.write("\t<tr>\n");
      out.write("\t\t\t<td>middlename:</td>\n");
      out.write("\t\t\t<td><input id=\"middlename\" type=\"text\" name=\"middlename\" /></td>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>lastname:</td>\n");
      out.write("\t\t\t<td><input id=\"lastname\" type=\"text\" name=\"lastname\" /></td>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>address:</td>\n");
      out.write("\t\t\t<td><input id=\"address\" type=\"text\" name=\"address\"/></td>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>country:</td>\n");
      out.write("\t\t\t<td><input id=\"country\" type=\"text\" name=\"country\"/></td>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>city:</td>\n");
      out.write("\t\t\t<td><input id=\"city\" type=\"text\" name=\"city\" /></td>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>state:</td>\n");
      out.write("\t\t\t<td><input id=\"state\" type=\"text\" name=\"state\" /></td>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>zip:</td>\n");
      out.write("\t\t\t<td><input id=\"zip\" type=\"text\" name=\"zip\" /></td>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>phone:</td>\n");
      out.write("\t\t\t<td><input id=\"phone\" type=\"text\" name=\"phone\" /></td>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>mobile:</td>\n");
      out.write("\t\t\t<td><input id=\"mobile\" type=\"text\" name=\"mobile\" /></td>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>fax:</td>\n");
      out.write("\t\t\t<td><input id=\"fax\" type=\"text\" name=\"fax\" /></td>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>emailid:</td>\n");
      out.write("\t\t\t<td><input id=\"emailid\" type=\"text\" name=\"emailid\" s/></td>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>clientweb:</td>\n");
      out.write("\t\t\t<td><input id=\"clientweb\" type=\"text\" name=\"clientweb\" /></td>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>organisation:</td>\n");
      out.write("\t\t\t<td><input id=\"organisation\" type=\"text\" name=\"organisation\" /></td>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<td align=\"center\">\n");
      out.write("\t\t<input type=\"submit\" formaction=\"save\" formmethod=\"post\" value=\"save\" />\n");
      out.write("\t\t</td>\n");
      out.write("\t\t<td><input align=\"right\" type=\"submit\" name=\"user\" onclick='window.location.assign(\"client.jsp\")' value=\"next\" id=\"next\"></td>\n");
      out.write("\t\t</td></table>\n");
      out.write("\t</form>\t</td></table></table></center>\t\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
